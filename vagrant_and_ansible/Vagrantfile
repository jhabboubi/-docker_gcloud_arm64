# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|


  config.vm.define "m1" do |m1|
    m1.vm.box = "generic/ubuntu1804"
    m1.vm.hostname = "m1"
    m1.vm.network "public_network", ip: "192.168.4.161", bridge: "Intel(R) Dual Band Wireless-AC 3165"


    m1.vm.provision "shell", inline: <<-SHELL
    apt-get update
    update-alternatives --remove python /usr/bin/python
    update-alternatives --install /usr/bin/python python /usr/bin/python3 10
    apt-get -y install python3-pip
    #pip3 --no-input install ansible --user
    apt-get install software-properties-common -y
    add-apt-repository --yes --update ppa:ansible/ansible
    apt-get install ansible -y
    #export ANSIBLE_HOST_KEY_CHECKING=False
    SHELL
    m1.vm.provision :shell, path: "script.sh", privileged: false
    m1.vm.provision "file", source: "hosts", destination: "$HOME/hosts"
    m1.vm.provision "file", source: "playbook.yml", destination: "$HOME/playbook.yml"
    m1.vm.provision "shell", inline: "cp /home/vagrant/hosts /etc/ansible/hosts"
    m1.vm.provision "file", source: "ansible.cfg", destination: "$HOME/ansible.cfg"
    m1.vm.provision "shell", inline: "cp /home/vagrant/ansible.cfg /etc/ansible/ansible.cfg"
    m1.vm.provision "shell", inline: "rm /home/vagrant/ansible.cfg ; rm /home/vagrant/hosts"
    m1.vm.disk :disk, size: "15GB", primary: true
    m1.vm.provider "virtualbox" do |v|
      v.memory = 2048
      v.cpus = 2
    end
    m1.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get upgrade -y
    SHELL
end


  config.vm.define "m2" do |m2|
    m2.vm.box = "generic/ubuntu1804"
    m2.vm.hostname = "m2"
    m2.vm.network "public_network", ip: "192.168.4.162", bridge: "Intel(R) Dual Band Wireless-AC 3165"
    m2.vm.disk :disk, size: "6GB", primary: true  
end

  config.vm.define "m3" do |m3|
    m3.vm.box = "generic/ubuntu1804"
    m3.vm.hostname = "m3"
    m3.vm.network "public_network", ip: "192.168.4.163", bridge: "Intel(R) Dual Band Wireless-AC 3165"
    m3.vm.disk :disk, size: "6GB", primary: true
  end

  config.vm.define "m4" do |m4|
    m4.vm.box = "centos/8"
    m4.vm.hostname = "m4"
    m4.vm.network "public_network", ip: "192.168.4.164", bridge: "Intel(R) Dual Band Wireless-AC 3165"     
    m4.vm.disk :disk, size: "6GB", primary: true
    m4.vm.provision "shell", inline: <<-SHELL
      sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config;
      systemctl restart sshd;
    SHELL
  
end


  config.vm.define "m5" do |m5|
    m5.vm.box = "generic/fedora33"
    m5.vm.hostname = "m5"
    m5.vm.network "public_network", ip: "192.168.4.165", bridge: "Intel(R) Dual Band Wireless-AC 3165"     
    m5.vm.disk :disk, size: "6GB", primary: true
  end

#  config.vm.define "m6" do |m6|
#    m6.vm.box = "ramsey/macos-catalina"
#    m6.vm.hostname = "m6"
#    m6.vm.network "public_network", ip: "192.168.4.166", bridge: "Intel(R) Dual Band Wireless-AC 3165"
#    m6.vm.disk :disk, size: "20GB", primary: true
#    m6.vm.provider "virtualbox" do |v|
#      v.memory = 4096
#      v.cpus = 2
#      v.gui = true
#    end

#  end

  config.vm.provider "virtualbox" do |vb|
    #   # Display the VirtualBox GUI when booting the machine
    #   vb.gui = true
    #
    #   # Customize the amount of memory on the VM:
      vb.memory = "1024"
      vb.cpus = 1
      

    end
# The most common configuration options are documented and commented below.
# For a complete reference, please see the online documentation at
# https://docs.vagrantup.com.

# Every Vagrant development environment requires a box. You can search for
# boxes at https://vagrantcloud.com/search.
#config.vm.box = "generic/ubuntu1804"

# Disable automatic box update checking. If you disable this, then
# boxes will only be checked for updates when the user runs
# `vagrant box outdated`. This is not recommended.
# config.vm.box_check_update = false

# Create a forwarded port mapping which allows access to a specific port
# within the machine from a port on the host machine. In the example below,
# accessing "localhost:8080" will access port 80 on the guest machine.
# NOTE: This will enable public access to the opened port
# config.vm.network "forwarded_port", guest: 80, host: 8080

# Create a forwarded port mapping which allows access to a specific port
# within the machine from a port on the host machine and only allow access
# via 127.0.0.1 to disable public access
# config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

# Create a private network, which allows host-only access to the machine
# using a specific IP.
# config.vm.network "private_network", ip: "192.168.33.10"

# Create a public network, which generally matched to bridged network.
# Bridged networks make the machine appear as another physical device on
# your network.
#config.vm.network "public_network" , bridge: "Intel(R) Dual Band Wireless-AC 3165"

# Share an additional folder to the guest VM. The first argument is
# the path on the host to the actual folder. The second argument is
# the path on the guest to mount the folder. And the optional third
# argument is a set of non-required options.
# config.vm.synced_folder "../data", "/vagrant_data"

# Provider-specific configuration so you can fine-tune various
# backing providers for Vagrant. These expose provider-specific options.
# Example for VirtualBox:
#

#
# View the documentation for the provider you are using for more
# information on available options.

# Enable provisioning with a shell script. Additional provisioners such as
# Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
# documentation for more information about their specific syntax and use.
#   config.vm.provision "shell", inline: <<-SHELL
#     apt-get update
#     apt-get upgrade -y
#
#   SHELL
#   end
#ssh-keygen -q -b 2048 -t rsa -N "" -C "creating SSH" -f ~/.ssh/id_rsa creates="~/.ssh/id_rsa"


end
